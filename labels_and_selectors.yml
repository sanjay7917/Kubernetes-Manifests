# First Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp1
  labels:
    class: unnati
    course: cka
spec:
  replicas: 6
  selector:
    matchLabels:
      class: unnati
      course: cka
  template:
    metadata:
      labels:
        class: unnati
        course: cka
    spec:
      containers:
        - name: nginxpo1
          image: nginx
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginxsvc1
spec:
  type: NodePort
  selector:
    class: unnati
    course: cka
  ports:
    - port: 80
      targetPort: 80
---
# Second Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp2
  labels:
    class: unnaticidco
    course: cca
spec:
  replicas: 5
  selector:
    matchLabels:
      class: unnaticidco
      course: cca
  template:
    metadata:
      labels:
        class: unnaticidco
        course: cca
    spec:
      containers:
        - name: nginxpo2
          image: nginx
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginxsvc2
spec:
  type: NodePort
  selector:
    class: unnaticidco
    course: cca
  ports:
    - port: 80
      targetPort: 80

# # ===
# kubectl get pods --show-labels
# # Equality-based 
# # === AND ===
# kubectl get pods -l class=unnati
# kubectl get pods -l class=unnati,course=cka
#                 OR
# kubectl get pods -l class=unnati&&course=cka
# # === OR ===
# kubectl get pods -l class=unnati,class!=unnaticidco
#                 OR
# kubectl get pods -l class=unnati||class=unnaticidco
# # Set-based 
# kubectl get pods -l 'class in (unnati)'
# # === AND ===
# kubectl get pods -l 'class in (unnati),course in (cka)'
#                 OR
# kubectl get pods -l 'class,course in (unnati,cka)'
# # === OR ===
# kubectl get pods -l 'class in (unnati),class notin (unnaticidco)'
